usethis::use_git()
usethis::use_github()
shiny::runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3v1.1')
shiny::runApp('tab3')
runApp('tab3')
runApp('tab3')
qmap(wp_ngaTrim)
qtmap(wp_ngaTrim)
tmap::qtm(wp_ngaTrim)
tmap::qtm(wp_ng
aTrim)
bdy_nga.sf <- read_rds("data/geodata/bdy_nga.sf.rds")
bdy_nga.sf <- read_rds("data/geodata/bdy_nga.sf.rds")
runApp('E:/GeoShiny Workshop/04-prototype-Choropleth_mapping_interactive')
runApp('E:/GeoShiny Workshop/03-prototype-Proportional_symbol_map_reactive')
shiny::runApp('D:/jephOstan/GeoShiny Workshop/04-prototype-Choropleth_mapping_interactive')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
runApp('tab3')
packages <- c(sf, tmap, shiny, shinythemes, plotly, tidyverse, ggstatsplot, tools)
install.packages("sf", lib="C:/R/R-4.2.2/library")
y
packages <- c(sf, tmap, shiny, shinythemes, plotly, tidyverse, ggstatsplot, tools)
pacman::p_load(sf, tmap, shiny, shinythemes, plotly, tidyverse, ggstatsplot, tools)
runApp('tab3')
runApp('tab3')
runApp('tab3')
wp_ngaTrim <- read_rds("data/geodata/wp_ngaTrim.rds")
wp_ngaTrim <- read_rds("data/geodata/wp_ngaTrim.rds")
pacman::p_load(sf, tmap, shiny, shinythemes, plotly, tidyverse, ggstatsplot, tools)
wp_ngaTrim <- read_rds("data/geodata/wp_ngaTrim.rds")
wp_ngaTrim <- read_rds("data/geodata/wp_ngaTrim.rds")
tm_shape(wp_ngaTrim) +
tm_fill(pct_functional,
n = 5,
style = "pretty",
palette = "YlOrRd") +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
tm_shape(wp_ngaTrim) +
tm_fill(wp_ngaTrim$pct_functional,
n = 5,
style = "pretty",
palette = "YlOrRd") +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
View(wp_ngaTrim)
tm_shape() +
tm_fill(wp_ngaTrim$pct_functional,
n = 5,
style = "pretty",
palette = "YlOrRd") +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
tm_shape(wp_ngaTrim) +
tm_fill(wp_ngaTrim$pct_functional,
n = 5,
style = "pretty",
palette = "YlOrRd") +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
tm_shape(wp_ngaTrim) +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
tm_shape(wp_ngaTrim) +
tm_fill(wp_ngaTrim$pct_functional,
) +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
tm_shape(wp_ngaTrim) +
tm_fill(wp_ngaTrim$pct_functional
) +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
tm_shape(wp_ngaTrim) +
tm_fill(`pct_functional`,
n = 5,
style = "pretty",
palette = "YlOrRd") +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
tm_shape(wp_ngaTrim) +
tm_fill("pct_functional",
n = 5,
style = "pretty",
palette = "YlOrRd") +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
tm_shape(wp_ngaTrim) +
tm_fill(("shapeName" %in% "Aba North") ,"pct_functional"),
wp_ngaTrim %>%
filter(shapeName %in% "Aba North")
abaNor <- wp_ngaTrim %>%
filter(shapeName %in% "Aba North")
View(abaNor)
unique(wp_ngaTrim$shapeName)
unique(wp_ngaTrim$shapeName, 30)
unique(wp_ngaTrim$shapeName)
districts <- wp_ngaTrim %>%
filter(shapeName %in% "Aba North")
tm_shape(districts) +
tm_fill("pct_functional",
n = 5,
style = "pretty",
palette = "YlOrRd") +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
tm_shape(wp_ngaTrim) +
tm_polygons() +
tm_shape(districts) +
tm_fill("pct_functional",
n = 5,
style = "pretty",
palette = "YlOrRd") +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
tm_shape(districts) +
tm_fill("pct_functional",
n = 5,
style = "pretty",
palette = "YlOrRd") +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
inputDistrict <- c("Aba North", "Apa")
tm_shape(wp_ngaTrim) +
tm_polygons() +
tm_shape(inputDistrict) +
tm_fill("pct_functional",
n = 5,
style = "pretty",
palette = "YlOrRd") +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
inputDistrict <-  wp_ngaTrim %>%
filter(shapeName %in% c("Aba North", "Apa"))
tm_shape(wp_ngaTrim) +
tm_polygons() +
tm_shape(inputDistrict) +
tm_fill("pct_functional",
n = 5,
style = "pretty",
palette = "YlOrRd") +
tm_borders(lwd = 0.1,
alpha = 1) +
tm_view(set.zoom.limits = c(11, 14))
runApp('tab3')
runApp('D:/jephOstan/GeoShiny Workshop/04-prototype-Choropleth_mapping_interactive')
shiny::runApp('tab3')
shiny::runApp('tab3')
runApp('tab3')
pacman::p_load(sf, tmap, shiny, shinythemes, plotly, tidyverse, ggstatsplot, tools)
runApp('tab3')
runApp('tab3')
shiny::runApp('tab3')
runApp('tab3')
runApp('tab3')
gc()
runApp('tab3')
runApp('tab3')
runApp('D:/jephOstan/GeoShiny Workshop/03-prototype-Proportional_symbol_map_reactive')
pacman::p_load(sf, tmap, shiny, shinythemes, plotly, tidyverse, ggstatsplot, tools)
wp_ngaTrim <- read_rds("data/geodata/wp_ngaTrim.rds")
wp_ngaTrim <- read_rds("data/geodata/wp_ngaTrim.rds")
wp_ngaTrim <- read_rds("data/geodata/wp_ngaTrim.rds")
ngaClustSF <- st_sf((cbind(wp_ngaTrim,
as.matrix
(as.factor
(cutree
(hclust
(dist
(wp_ngaTrimInput,
method = 'euclidean'),
method = 'ward.D'),
k = input$clusterInput))))), crs = 26392)
ngaClustSF <- st_sf((cbind(wp_ngaTrim,
as.matrix
(as.factor
(cutree
(hclust
(dist
(wp_ngaTrim,
method = 'euclidean'),
method = 'ward.D'),
k = 3))))), crs = 26392)
cluster_vars <- wp_ngaTrim %>%
st_set_geometry(NULL) %>%
select("shapeName",
"pct_functional",
"pct_nonFunctional",
"pct_handPump",
"pct_mechPump",
"pct_tapStand",
"pct_uc300",
"pct_uc1000",
"pct_ucN1000",
"pct_uc250",
"pct_urban1",
"pct_urban0",
"pct_cs04",
"pct_cs10",
"pct_stat1",
"pct_stat0",
"pct_ps09",
"pct_ps19")
wp_stdMM <- normalize(cluster_vars)
prox_mat_euc <- dist(cluster_vars,
method = 'euclidean')
hclust_ward <- hclust(prox_mat_euc,
method = 'ward.D')
hclust_ward <- hclust(prox_mat_euc,
method = 'ward.D')
groups <- as.factor(cutree(hclust_ward, k = 3))
nga_clust.sf <- cbind(wp_ngaTrim, as.matrix(groups)) %>%
rename(`cluster`=`as.matrix.groups.`)
tm_shape(nga_clust.sf) +
tm_fill(col = "cluster",
title = "Cluster") +
tm_borders(alpha = 0.3) +
tm_style("cobalt") +
tm_layout(main.title = "Non-Spatial Hierarchical Clustering",
main.title.size = 1.1,
main.title.position = "center",
legend.height = 0.3,
legend.width = 0.1,
legend.title.size = 1,
legend.text.size = 1,
frame = TRUE,
asp = 0)
prox_mat_euc1 <- dist(wp_ngaTrim,
method = 'euclidean')
groups <- as.factor(cutree((hclust((dist(cluster_vars,
method = 'euclidean')),
method = 'ward.D')), k = 3))
groups1 <- as.factor(cutree((hclust((dist(cluster_vars,
method = 'euclidean')),
method = 'ward.D')), k = 3))
nga_clust.sf1 <- cbind(wp_ngaTrim, as.matrix(groups1))
View(nga_clust.sf1)
nga_clust.sf1 <- cbind(wp_ngaTrim, as.matrix(as.factor(cutree((hclust((dist(cluster_vars,
method = 'euclidean')),
method = 'ward.D')), k = 3)))) %>%
rename(`cluster`=`as.matrix.groups.`)
nga_clust.sf1 <- cbind(wp_ngaTrim, as.matrix(as.factor(cutree((hclust((dist(cluster_vars,
method = 'euclidean')),
method = 'ward.D')), k = 3))))
ls(nga_clust.sf1)
ls(nga_clust.sf1$"as.matrix.as.factor.cutree..hclust..dist.cluster_vars..method....euclidean.....")
nga_clust.sf1[1]
nga_clust.sf1[, 44]
nga_clust.sf1[:44]
colnames(nga_clust.sf1)[44]
nga_clust.sf1$as.matrix.as.factor.cutree..hclust..dist.cluster_vars..method....euclidean.....
clusterVarsInput <- wp_ngaTrim %>%
st_set_geometry(NULL) %>%
select("shapeName",
"pct_functional",
"pct_nonFunctional",
"pct_handPump",
"pct_mechPump",
"pct_tapStand",
"pct_uc300",
"pct_uc1000",
"pct_ucN1000",
"pct_uc250",
"pct_urban1",
"pct_urban0",
"pct_cs04",
"pct_cs10",
"pct_stat1",
"pct_stat0",
"pct_ps09",
"pct_ps19")
hclust_ward <- hclust((dist(clusterVarsInput,
method = 'euclidean')),
method = 'ward.D')
groups1 <- as.factor(cutree((hclust((dist(clusterVarsInput,
method = 'euclidean')),
method = 'ward.D')), k = 3))
nga_clust.sf1 <- cbind(wp_ngaTrim, as.matrix(as.factor(cutree((hclust((dist(clusterVarsInput,
method = 'euclidean')),
method = 'ward.D')), k = 3))))
nga_clust.sf1 <- cbind(wp_ngaTrim, as.matrix(as.factor(cutree((hclust((dist(clusterVarsInput,
method = 'euclidean')),
method = 'ward.D')), k = 3))))
colnames(nga_clust.sf1)[44]
tm_shape(nga_clust.sf1) +
tm_fill(col = "cluster",
title = "Cluster") +
tm_borders(alpha = 0.3) +
tm_style("cobalt") +
tm_layout(main.title = "Non-Spatial Hierarchical Clustering",
main.title.size = 1.1,
main.title.position = "center",
legend.height = 0.3,
legend.width = 0.1,
legend.title.size = 1,
legend.text.size = 1,
frame = TRUE,
asp = 0)
tm_shape(nga_clust.sf) +
tm_fill(col = "cluster",
title = "Cluster") +
tm_borders(alpha = 0.3) +
tm_style("cobalt") +
tm_layout(main.title = "Non-Spatial Hierarchical Clustering",
main.title.size = 1.1,
main.title.position = "center",
legend.height = 0.3,
legend.width = 0.1,
legend.title.size = 1,
legend.text.size = 1,
frame = TRUE,
asp = 0)
shiny::runApp('tab3')
runApp('tab3')
shiny::runApp('tab3')
runApp('Shiny-app/app.R/app_J.R')
runApp()
runApp()
runApp()
runApp()
runApp()
